name: GitHub Actions CI/CD
run-name: CI/CD.
on:
  push:
    branches:
     - '*'
    paths-ignore:
     - 'helmcharts/**'
     - '.github/**'
jobs:
  # CI:
  #   name: CI-Job
  #   runs-on: self-hosted

  #   steps:
  #     - run: echo "The job was automatically triggered by a Push event."
     
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Docker Login
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      
  #     - name: Get Hash
  #       id: get_commit_hash
  #       run: echo "git_hash=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

  #     - name: Building flask application.
  #       run: |
  #         make docker-build
  #       env:
  #         IMAGE_TAG: ${{ env.git_hash }}

  #     - name: Run docker build.
  #       run: |
  #         make start-db

  #     - name: Push the Image into dockerHub.
  #       run: |
  #         make docker_push
  #       env:
  #         USERNAME: ${{secrets.DOCKER_USERNAME}}
  #         IMAGE_TAG: ${{ env.git_hash }}
  CD:
    name: argocd-application
    needs: CD
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Hash
        id: get_commit_hash
        run: echo "git_hash=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

      - name: Git checkout branch
        run: |
            git status
            git checkout exercise-09

      - name: Update value.yaml file.
        run: sed -i "s/tag:.*/tag:\ ${{ env.git_hash }}/g" helmcharts/values.yaml


#   CD:
#     name: CD-Job
#     needs: CI
#     runs-on: self-hosted

#     steps:
#       - name: Get Hash
#         id: get_commit_hash
#         run: echo "git_hash=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV

#       - name: Trigger deployment in Kubernetes.
#         env:
#           IMAGE_TAG: ${{ env.git_hash }}
#         run: |
#             echo "Running kubernetes deployment with latest image."
#             sed -i "s/tag:.*/tag:\ ${{ env.git_hash }}/g" helmcharts/values.yaml
#             kubectl config get-contexts
# # cd helmcharts && helm install templates .

