apiVersion: v1
kind: Service
metadata:
  name: student-api-service
  namespace: student-api
  labels:
    app: student-api
spec:
    ports:
    - port: 4000
      protocol: TCP
      targetPort: 5000
    selector:
      app: student-api
    type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: student-api
  labels:
    app: student-api
spec:
  selector:
    matchLabels:
      app: student-api
  template:
    metadata:
      labels:
        app: student-api
    spec:
      containers:
        - name: flask-app
          image: aashirathore111/studentapi:23456
          ports:
            - containerPort: 5000
          env:
            - name: DB_URL
              valueFrom:
                configMapKeyRef:
                  key: db_url
                  name: app-configmap
      initContainers:
        - name: init-db-migration
          image: aashirathore111/studentapi:23456
          env:
          - name: DB_URL
            valueFrom:
              configMapKeyRef:
                key: db_url
                name: app-configmap
          - name: MIGRATION
            valueFrom:
                configMapKeyRef:
                  key: migration
                  name: app-configmap
      imagePullSecrets:
        - name: myregistrykey
      nodeSelector:
        name: application    
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: student-api
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
    name: postgresdb
  clusterIP: None
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresdb
  namespace: student-api
spec:
  selector:
    matchLabels:
      app: postgres
  serviceName: "postgres"
  minReadySeconds: 10
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres-db
          image: postgres:12
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              name: postgresdb
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: postgres_user
                  name: postgres-secret
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: postgres_password
                  name: postgres-secret
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: postgres_db
                  name: app-configmap
      nodeSelector:
        name: dependent_services
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-configmap
  namespace: student-api
  labels:
    app: postgres
data:
  postgres_db: postgres
  db_url: postgresql://postgres:postgres@postgres:5432/postgres
  migration: "TRUE"

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: student-api
type: Opaque
data:
    postgres_user: cG9zdGdyZXM=
    postgres_password: cG9zdGdyZXM=
---
apiVersion: v1
kind: Secret
metadata:
  name: myregistrykey
  namespace: student-api
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7CgkJCSJhdXRoIjogIllXRnphR2x5WVhSb2IzSmxNVEV4T2tsaVpIQnBkRFl6TmpJNE1DRT0iCgkJfQoJfQp9
type: kubernetes.io/dockerconfigjson